import Testing
@testable import ContentView 

struct ContentViewTests {
    
    @Test
    func testAddIngredientAddsNonEmptyItem() {
        var proteins = [String]()
        addIngredient("Chicken", to: &proteins)
        #expect(proteins == ["Chicken"])
    }

    @Test
    func testAddIngredientDoesNotAddEmptyItem() {
        var carbs = ["Rice"]
        addIngredient("", to: &carbs)
        #expect(carbs == ["Rice"])
    }

    @Test
    func testGenerateMealComboWithFullListsReturnsCombo() {
        let proteins = ["Tofu"]
        let vegetables = ["Broccoli"]
        let carbs = ["Quinoa"]

        let result = generateMealCombo(proteins: proteins, vegetables: vegetables, carbs: carbs)

        let parts = result.split(separator: ",").map { $0.trimmingCharacters(in: .whitespaces) }
        #expect(parts.count == 3)
        #expect(proteins.contains(parts[0]))
        #expect(vegetables.contains(parts[1]))
        #expect(carbs.contains(parts[2]))
    }

    @Test
    func testGenerateMealComboWithMissingCategoryShowsWarning() {
        let result = generateMealCombo(proteins: [], vegetables: ["Broccoli"], carbs: ["Rice"])
        #expect(result == "Add at least one item to each category!")
    }
}